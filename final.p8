pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
villagers = {}

player = {
    x = 60,
    y = 60,
    speed = 1,
    facing_right = true,
    is_biting = false,
    bite_end_time = 0,
    lives = 3,
    invincible = false,
    invincible_end_time = 0,
    game_over = false,
    blood = 0,
    blood_max = 200
}

floating_texts = {}

function _init()
    palt(0, false)
    palt(9, true)

    local spawn_points = {}
    for tile_x=0,15 do
        for tile_y=0,15 do
            if mget(tile_x, tile_y) == 16 then
                add(spawn_points, {x=tile_x*8, y=tile_y*8})
            end
        end
    end

    for i=1,5 do
        if #spawn_points > 0 then
            local idx = flr(rnd(#spawn_points)) + 1
            local p = spawn_points[idx]
            del(spawn_points, p)
            add(villagers, {
                x = p.x,
                y = p.y,
                speed = 0.5,
                dir_x = 1,
                dir_y = 0,
                change_time = time() + rnd(2) + 2,
                is_bit = false
            })
        end
    end
end

function is_wall_tile(tile_x, tile_y)
    return mget(tile_x, tile_y) == 6
end

function dist(x1, y1, x2, y2)
    return sqrt((x2 - x1)^2 + (y2 - y1)^2)
end

function random_dir(v)
    local choice = flr(rnd(4))
    if choice == 0 then
        v.dir_x = 1 v.dir_y = 0
    elseif choice == 1 then
        v.dir_x = -1 v.dir_y = 0
    elseif choice == 2 then
        v.dir_x = 0 v.dir_y = 1
    else
        v.dir_x = 0 v.dir_y = -1
    end
end

function is_wall(x, y)
    local tile_x = flr(x / 8)
    local tile_y = flr(y / 8)
    return mget(tile_x, tile_y) == 6
end

function touching(a, b)
    return abs(a.x - b.x) < 8 and abs(a.y - b.y) < 8
end

function player_touching_flashlight()
    for v in all(villagers) do
        if not v.is_bit then
            if v.dir_x == 1 then
                if abs((v.x + 8) - player.x) < 8 and abs(v.y - player.y) < 8 then return true end
            elseif v.dir_x == -1 then
                if abs((v.x - 8) - player.x) < 8 and abs(v.y - player.y) < 8 then return true end
            elseif v.dir_y == 1 then
                if abs(v.x - player.x) < 8 and abs((v.y + 8) - player.y) < 8 then return true end
            elseif v.dir_y == -1 then
                if abs(v.x - player.x) < 8 and abs((v.y - 8) - player.y) < 8 then return true end
            end
        end
    end
    return false
end

function _update()
    if player.game_over then return end

    for v in all(villagers) do
        if not v.is_bit then
            local next_vx = v.x + v.speed * v.dir_x
            local next_vy = v.y + v.speed * v.dir_y

            local can_move_x = not is_wall(next_vx, v.y)
            local can_move_y = not is_wall(v.x, next_vy)

            if can_move_x then
                v.x = next_vx
            else
                v.dir_x = -v.dir_x
            end

            if can_move_y then
                v.y = next_vy
            else
                v.dir_y = -v.dir_y
            end

            if time() > v.change_time then
                random_dir(v)
                v.change_time = time() + rnd(2) + 2
            end
        end
    end

    for f in all(floating_texts) do
        if time() > f.end_time then
            del(floating_texts, f)
        end
    end

    local move_x = 0
    local move_y = 0

    if btn(0) then move_x = -1 player.facing_right = false end
    if btn(1) then move_x = 1 player.facing_right = true end
    if btn(2) then move_y = -1 end
    if btn(3) then move_y = 1 end

    local next_px = player.x + player.speed * move_x
    local next_py = player.y + player.speed * move_y

    if not is_wall(next_px, player.y) then player.x = next_px end
    if not is_wall(player.x, next_py) then player.y = next_py end

    if btnp(4) then
        player.is_biting = true
        player.bite_end_time = time() + 0.18

        for v in all(villagers) do
            if touching(player, v) and not v.is_bit then
                v.is_bit = true
                player.blood += 50
                if player.blood > player.blood_max then
                    player.blood = player.blood_max
                end
                add(floating_texts, {text="+50", color=8, x=v.x+2, y=v.y-4, end_time=time()+1.3})
                break
            end
        end
    end

    if player.is_biting and time() > player.bite_end_time then
        player.is_biting = false
    end

    if player_touching_flashlight() and not player.invincible and player.lives > 0 then
        player.lives -= 1
        player.invincible = true
        player.invincible_end_time = time() + 1.5
        add(floating_texts, {text="-1", color=0, x=player.x+2, y=player.y-4, end_time=time()+0.5})
    end

    if player.invincible and time() > player.invincible_end_time then
        player.invincible = false
    end

    if player.lives <= 0 then
        player.game_over = true
    end
end

function _draw()
    cls()
    map()

    for v in all(villagers) do
        if v.is_bit then
            spr(13, v.x, v.y)
        else
            spr(1, v.x, v.y)

            if v.dir_x == 1 then
                spr(3, v.x + 6, v.y + 2)
            elseif v.dir_x == -1 then
                spr(4, v.x - 8, v.y + 1)
            elseif v.dir_y == 1 then
                spr(2, v.x + 2, v.y + 6)
            elseif v.dir_y == -1 then
                spr(5, v.x - 5, v.y - 2)
            end
        end
    end

    for f in all(floating_texts) do
        print(f.text, f.x, f.y, f.color)
    end

    if player.is_biting then
        if player.facing_right then
            spr(11, player.x, player.y)
        else
            spr(12, player.x, player.y)
        end
    else
        if player.facing_right then
            spr(9, player.x, player.y)
        else
            spr(10, player.x, player.y)
        end
    end

    for i=0,2 do
        if i < player.lives then
            spr(14, 2 + i*10, 2)
        else
            spr(15, 2 + i*10, 2)
        end
    end

    rect(98, 2, 126, 8, 5)
    rectfill(99, 3, 125, 7, 0)

    local blood_ratio = player.blood / player.blood_max
    local fill_width = flr(25 * blood_ratio)

    if player.blood >= player.blood_max then
        rectfill(99, 3, 99 + fill_width, 7, 7)
    else
        rectfill(99, 3, 99 + fill_width, 7, 8)
    end

    if player.game_over then
        print("game over!", 32, 50, 0)
    end
end
__gfx__
0000000099999999999a9999999999aa999999999aaaaaaa66655666444444545755575999900999999009999990099999900999999999999009009990090099
000000009900999999aaa999999aaaaaaa9999999aaaaaaa665555664f4565445656556999066099990660999902209999022099999999990880880909909909
000000009044099999aaa9999aaaaaaaaaaa999999aaaaa96565565644544f54555555599907709999077099990ee099990ee099999999998778888097709990
0000000090ff09999aaaaa99aaaaaaaaaaaaaaa999aaaaa95657756545f465645657565990888809908888099088880990888809999888998788888097999990
00000000088a80999aaaaa999aaaaaaaaaaaaaaa999aaa9956577565446545445755555908555609906555800855520990255580998888890888880909999909
00000000f5558f099aaaaa99999aaaaaaaaaaaa9999aaa9965655656466f46445556556085555099990555588555509999055558988889999088809990999099
0000000004004099aaaaaaa9999999aaaaaa9999999aaa9966555566664464445575575908404099990404800840409999040480999999999908099999090999
0000000090990999aaaaaaa999999999aa9999999999a9996665566644f444f46555655990090999999090099009099999909009999999999990999999909999
40404044000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
40404044000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
40404044000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
40404044000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
40404044000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
40404044000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
40404044000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0606060606060606060606060606060606000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0607070707070707070707070707070606000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0607070707070707070707070707070606000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0607070707100707070707100707070606000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0607070707070707070707070707070606000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0607100707070707070707070707070606000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0607070707070707070707070707070606000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0607070707070707070707071007070606000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0607070707070707070707070707070606000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0607070707070707070707070707070606000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0607070707100707070707070707070606000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0607070707070707070710070707070606000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0607100707070707070707070707070606000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0607070707070707070707070707070606000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0607070707070707070707070707070606000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0606060606060606060606060606060606000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
